{"ast":null,"code":"var _jsxFileName = \"/home/macgyver/Documentos/www/weather/src/App.js\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  //Chamar a api\n  const [weather, setWeather] = useState(false); //hook state para obter localização de acordo com o estado da aplicação\n\n  const [location, setLocation] = useState(false); // Usar para pedir permissão ao usuário para obter localização\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      getWeather(position.coords.latitude, position.coords.longitude);\n      setLocation(true);\n    });\n  }, []);\n\n  const getWeather = async (lat, long) => {\n    const res = await axios.get(\"http://api.openweathermap.org/data/2.5/weather\", {\n      params: {\n        lat: lat,\n        lon: long,\n        appid: process.env.REACT_APP_OPEN_WHEATHER_KEY,\n        lang: 'pt',\n        units: 'metric'\n      }\n    });\n    setWeather(res.data);\n  }; // Use para retornar ao usuário somente se ele aceitar obter informações de localização\n\n\n  if (location == false) {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, \"Voc\\xEA precisa habilitar a localiza\\xE7\\xE3o no browser o/\");\n  } else {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, \"Clima nas suas Coordenadas (Exemplo)\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, \"Temperatura atual: x\\xB0\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, \"Temperatura m\\xE1xima: x\\xB0\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, \"Temperatura minima: x\\xB0\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, \"Press\\xE3o: x hpa\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, \"Umidade: x%\")));\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Clima nas suas Coordenadas (Exemplo)\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Temperatura atual: x\\xB0\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"Temperatura m\\xE1xima: x\\xB0\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Temperatura minima: x\\xB0\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Press\\xE3o: x hpa\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Umidade: x%\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/macgyver/Documentos/www/weather/src/App.js"],"names":["React","Fragment","useEffect","useState","axios","App","weather","setWeather","location","setLocation","navigator","geolocation","getCurrentPosition","position","getWeather","coords","latitude","longitude","lat","long","res","get","params","lon","appid","process","env","REACT_APP_OPEN_WHEATHER_KEY","lang","units","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,GAAT,GAAe;AACb;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC,CAFa,CAIb;;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC,CALa,CAQb;;AACAD,EAAAA,SAAS,CAAC,MAAK;AACbQ,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IAAa;AACpDC,MAAAA,UAAU,CAACD,QAAQ,CAACE,MAAT,CAAgBC,QAAjB,EAA2BH,QAAQ,CAACE,MAAT,CAAgBE,SAA3C,CAAV;AACAR,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;;AAQA,QAAMK,UAAU,GAAG,OAAOI,GAAP,EAAYC,IAAZ,KAAqB;AACtC,UAAMC,GAAG,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAU,gDAAV,EAA4D;AAC5EC,MAAAA,MAAM,EAAE;AACNJ,QAAAA,GAAG,EAAEA,GADC;AAENK,QAAAA,GAAG,EAAEJ,IAFC;AAGNK,QAAAA,KAAK,EAAEC,OAAO,CAACC,GAAR,CAAYC,2BAHb;AAINC,QAAAA,IAAI,EAAE,IAJA;AAKNC,QAAAA,KAAK,EAAE;AALD;AADoE,KAA5D,CAAlB;AASAtB,IAAAA,UAAU,CAACa,GAAG,CAACU,IAAL,CAAV;AACD,GAXD,CAjBa,CAgCb;;;AACA,MAAGtB,QAAQ,IAAI,KAAf,EAAqB;AACnB,wBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qEADF;AAKH,GANC,MAMI;AACF,wBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALF,CAHF,CADF;AAaH;;AAGC,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALF,CAHF,CADF;AAaD;;AAED,eAAeH,GAAf","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport axios from 'axios';\n \nfunction App() {\n  //Chamar a api\n  const [weather, setWeather] = useState(false);\n  \n  //hook state para obter localização de acordo com o estado da aplicação\n  const [location, setLocation] = useState(false);\n\n\n  // Usar para pedir permissão ao usuário para obter localização\n  useEffect(()=> {\n    navigator.geolocation.getCurrentPosition((position)=> {\n      getWeather(position.coords.latitude, position.coords.longitude);\n      setLocation(true)\n    })\n  }, [])\n\n\n  const getWeather = async (lat, long) => {\n    const res = await axios.get(\"http://api.openweathermap.org/data/2.5/weather\", {\n      params: {\n        lat: lat,\n        lon: long,\n        appid: process.env.REACT_APP_OPEN_WHEATHER_KEY,\n        lang: 'pt',\n        units: 'metric'\n      }  \n    });\n    setWeather(res.data);\n  }\n\n\n\n  // Use para retornar ao usuário somente se ele aceitar obter informações de localização\n  if(location == false){\n    return (\n      <Fragment>\n        Você precisa habilitar a localização no browser o/\n      </Fragment>\n    )\n} else{\n    return (\n      <Fragment>\n        <h3>Clima nas suas Coordenadas (Exemplo)</h3>\n        <hr />\n        <ul>\n          <li>Temperatura atual: x°</li>\n          <li>Temperatura máxima: x°</li>\n          <li>Temperatura minima: x°</li>\n          <li>Pressão: x hpa</li>\n          <li>Umidade: x%</li>\n        </ul>\n      </Fragment>\n    );\n}\n\n\n  return (\n    <Fragment>\n      <h3>Clima nas suas Coordenadas (Exemplo)</h3>\n      <hr />\n      <ul>\n        <li>Temperatura atual: x°</li>\n        <li>Temperatura máxima: x°</li>\n        <li>Temperatura minima: x°</li>\n        <li>Pressão: x hpa</li>\n        <li>Umidade: x%</li>\n      </ul>\n    </Fragment>\n  );\n}\n \nexport default App;"]},"metadata":{},"sourceType":"module"}